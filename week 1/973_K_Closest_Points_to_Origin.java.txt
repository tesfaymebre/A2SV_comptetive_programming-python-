class Solution {
    public int[][] kClosest(int[][] points, int k) {
        int outerSize = points.length;
        int innerSize = points[0].length;
        
        int[][] mostClosest = new int[k][innerSize];
        double[] distances = new double[outerSize];
        
        for(int i=0; i < outerSize ;i++){
            distances[i] = distance(points[i]);
        }
        for(int j = 0; j < outerSize-1; j++){
            for(int z = j+1; z < outerSize; z++){
                double temp;
                int[] temp2;
                
                if(distances[z] < distances[j]){
                    temp = distances[j];
                    distances[j]=distances[z];
                    distances[z]=temp;
                    
                    temp2 = points[j];
                    points[j] = points[z];
                    points[z] = temp2;
                }
            }
        }
        for(int a = 0; a < k; a++){
            mostClosest[a] = points[a];
        }
        return mostClosest;
    }
    
    public double distance(int[] point){
       return Math.sqrt(Math.pow(point[0],2) + Math.pow(point[1],2));
    }
}